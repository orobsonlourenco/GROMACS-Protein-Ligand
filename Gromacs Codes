#LINUX and GROMACS UNIVERSAL TUTORIAL

----INSTALL UBUNTU-----
UPGRADE AND UPDATE LIBRARIES OF UBUNTU BY FOLLOWING COMMANDS

Commands:
sudo apt update
sudo apt upgrade
sudo apt install gcc
sudo apt install cmake
sudo apt install build-essential
sudo apt install libfftw3-dev OR
sudo apt-get install -y libfftw3-dev

ONCE THE ABOVE COMMANDS ARE INTERED AND LINUX SYSTEM IS UPDATED, PROCEED TO INSTALL GROMACS

---------------GROMACS DIRTY INSTALLATION COMMAND--------------
sudo apt install gromacs
sudo apt remove gromacs
--------------------Install Pymol------------------------
sudo apt-get install -y pymol

--------------Install google chrome----------------------
get https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb

-----------------Install Chimera------------------------
Download the set-up file from "https://www.cgl.ucsf.edu/chimera/download.html"
Move the file to desired folder.
In tht folder open terminal
Command:
ls (to check the name of setup file)
chmod +x CHIMERA-INSTALLER.bin
./CHIMERA-INSTALLER.bin
 
-----------------Autodoc-Vinna------------------------
Go to download page "http://vina.scripps.edu/download.html"
Move the file to desired folder.
In that folder open terminal
Command:
ls (to check the name of setup file)
tar -xzvf autodock_vina_1_1_2_linux_x86.tgz

-------------------Install-GRACE----------------------
sudo apt-get install grace  

------------------------VMD---------------------------
https://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=VMD
1. Save the .tar.gz file in working folder
2. open the extracted folder and run command './configure' by opening the termianl  
3. Open the folder src in terminal and run the command 'sudo make install' 
4. type 'vmd' in termial and program should run. 

###################MANNUAL-GROMACS-COMPILATION###########################
#	Download Gromacs from : 					#
#	https://manual.gromacs.org/current/download.html#		#
#									#
###################################CUDA TOOLKIT:######################### 
#	https://developer.nvidia.com/cuda-downloads			#
#	#Follow the steps and copy the commands				#
#									#
#########################Gromacs Compilation Process#####################
#	tar xfz gromacs-2020.2.tar.gz					#
#	cd gromacs-2020.2						#
#	mkdir build							#
#	cd build							#
#	cmake .. -DGMX_GPU=CUDA -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda	#
#	make								#
#	make check							#
#	sudo make install						#
#	source /usr/local/gromacs/bin/GMXRC				#
#########################################################################


#########STEPS FOR MD AS FOLLOWS######### 

---PREPARE LIGAND AND RECEPTOR IN CHIMERA----
1. open the best pose ligand with the receptor Protein.pdb file
2. Delete the chain of protein, in the residual ligand, add hydrogens and save it as LIG.mol2 as 'LIG.mol2'

#Open the LIG.mol2 file and in the second line 
#Correction to be made in LIG.mol2 
#Open LIG.mol2 by using gedit command or simplyopening file in any text editor.
2.1.	"@<TRIPOS>MOLECULE" make sure this is the first line in file
	delete the header and empty space if you have to
	
2.2.      "@<TRIPOS>MOLECULE” there will be name after this line maybe xxx.pdb or ****** or anything else
	change it to LIG 
	
2.3.	bond orders "@<TRIPOS>BOND" will be arranged differently in each file 
arrange them in specific order to avoid errors use 
perl sort_mol2_bonds.pl LIG.mol2 LIG.mol2 script

3. Go to SwissParam "http://www.swissparam.ch/" and upload the 'Lig.mol2 file'
4. Download the .zip folder
5. Again open the best pose ligand with the receptor .pdb file, delete ligand, Perform DockPrep of protein as save it as .pdb file as 'REC.pdb'
6. Make a working Folder for Gromacs, copy contents of the downloaded zip file into this folder, copy the DockPrep 'rec.pdb' in to working folder
7. Copy all the .mdp files into this working folder
8. Open the terminal in this working folder and proceed with Gromacs.  

---------GROMACS UBUNTU TUTORIAL-----------
source /usr/local/gromacs/bin/GMXRC	(If Gromacs is manually compiled / not for dirty install)  

gmx pdb2gmx -f protein.pdb -o protein_processed.gro -ter -ignh
1 (CHARMM36)
1 (TIP3P)
0 NH3+
0 COO-

Após preparar o ligante executar:

perl sort_mol2_bonds.pl lig.mol2 lig_fix.mol2

python2 cgenff_charmm2gmx_py2.py LIG lig_fix.mol2 lig.str charmm36-jul2022.ff

gmx editconf -f lig_ini.pdb -o lig.gro

Build the complex

-----EDIT THE FOLLOWING in topol.top -----

; Include Position restraint file
#ifdef POSRES
#include "posre.itp"
#endif

; Include ligand topology
#include "lig.itp"

; Include water topology
#include "./charmm36-jul2022.ff/tip3p.itp"



; Include forcefield parameters
#include "./charmm36-jul2022.ff/forcefield.itp"

; Include ligand parameters
#include "lig.prm"

[ moleculetype ]
; Name            nrexcl
Protein_chain_A     3


[ molecules ]
; Compound        #mols
Protein_chain_A     1
LIG                 1

----------Defining the Unit Cell & Adding Solvent------------

gmx editconf -f complex.gro -o newbox.gro -bt dodecahedron -d 1.0

gmx solvate -cp newbox.gro -cs spc216.gro -p topol.top -o solv.gro

gmx grompp -f ions.mdp -c solv.gro -p topol.top -o ions.tpr

gmx genion -s ions.tpr -o solv_ions.gro -p topol.top -pname NA -nname CL -neutral
>escolher SOL

-------------------Energy Minimization-----------------------------

gmx grompp -f em.mdp -c solv_ions.gro -p topol.top -o em.tpr

gmx mdrun -v -deffnm em

------------------Equilibration-------------------------------

gmx make_ndx -f lig.gro -o index_lig.ndx
...
 > 0 & ! a H*
 > q

gmx genrestr -f lig.gro -n index_lig.ndx -o posre_lig.itp -fc 1000 1000 1000
	> select group "3"
	
Now, open topol.top file

	at the end of the document 

	after 
		"; Include Position restraint file
		#ifdef POSRES
		#include "posre.itp"
		#endif

		"Here"
		
		; Include ligand topology
        #include "jz4.itp"

	add this 

		; Ligand position restraints
        #ifdef POSRES
        #include "posre_lig.itp"
        #endif

Again, Make other Index file for System 

gmx make_ndx -f em.gro -o index.ndx
	
	> 1 | 13 | 14
	> q
	
-----[NVT]-----

gmx grompp -f nvt.mdp -c em.gro -r em.gro -p topol.top -n index.ndx -o nvt.tpr	

gmx mdrun -deffnm nvt


-----[NPT]-----
gedit NPT.mdp (This file is already modified)

gmx grompp -f NPT.mdp -c NVT.gro -r NVT.gro -p topol.top -n index.ndx -maxwarn 2 -o NPT.tpr
	
gmx mdrun -deffnm NPT

-----[FINAL MD RUN/PRODUCTION]-----
gedit NPT.mdp (Change MD RUN TIME as per your need)

gmx grompp -f MD.mdp -c NPT.gro -t NPT.cpt -p topol.top -n index.ndx -maxwarn 2 -o MD.tpr

gmx mdrun -deffnm MD


----[Recentering and Rewrapping Coordinates]----
gmx trjconv -s MD.tpr -f MD.xtc -o MD_center.xtc -center -pbc mol -ur compact
#Choose "Protein" for centering and "System" for output.

#To extract the first frame (t = 0 ns) of the trajectory, use trjconv -dump with the recentered trajectory:
gmx trjconv -s MD.tpr -f MD_center.xtc -o start.pdb -dump 0


------RMSD Calculations-----
gmx rms -s MD.tpr -f MD_center.xtc -o rmsd.xvg
gmx rms -s MD.tpr -f MD_center.xtc -o rmsd.xvg -tu ns
4
13


#(Select appropritate 2 options one by one and then open the output files in Grace) Select Backbone and then LIG

xmgrace rmsd.xvg

------RMSF Calculations-----
gmx rmsf -s MD.tpr -f MD_center.xtc -o rmsf.xvg
4

(Select appropritate Backbone open the output files in Grace)

xmgrace output.xvg

-----------h-bonds-------------------
gmx hbond -s MD.tpr -f MD_center.xtc -num hb.xvg
gmx hbond -s MD.tpr -f MD_center.xtc -num hb.xvg -tu ns
1
13
xmgrace hb.xvg

--------------Gyration Radius------------------
gmx gyrate -s MD.tpr -f MD_center.xtc -o gyrate1.xvg
#Choose the group of your choice 
xmgrace gyrate1.xvg

-------------ENERGY Calculations---------------
gmx energy -f MD.edr -o energy1.xvg
#Choose the option of your choice
xmgrace -nxy energy1.xvg

